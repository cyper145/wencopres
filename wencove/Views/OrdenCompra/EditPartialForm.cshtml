@using wencove.conexion.model.entity




@Html.DevExpress().Menu(menuSettings =>
{
    menuSettings.Name = "pageToolbarOrdenes";

    menuSettings.ItemAutoWidth = false;
    menuSettings.AllowSelectItem = false;
    menuSettings.ApplyItemStyleToTemplates = true;

    menuSettings.SettingsAdaptivity.Enabled = true;
    menuSettings.SettingsAdaptivity.EnableAutoHideRootItems = true;
    menuSettings.SettingsAdaptivity.EnableCollapseRootItemsToIcons = true;
    menuSettings.SettingsAdaptivity.CollapseRootItemsToIconsAtWindowInnerWidth = 600;

    menuSettings.Width = Unit.Percentage(100);
    menuSettings.ControlStyle.SeparatorWidth = Unit.Pixel(0);
    menuSettings.ControlStyle.CssClass = "page-toolbar";

    menuSettings.Styles.Item.CssClass = "item";
    menuSettings.Styles.Item.VerticalAlign = VerticalAlign.Middle;
    menuSettings.Styles.Item.HorizontalAlign = HorizontalAlign.Left;
    menuSettings.Images.Item.Width = Unit.Pixel(16);
    menuSettings.Images.Item.Height = Unit.Pixel(16);

    menuSettings.Items.Add(item =>
    {
        item.Enabled = false;
        item.SetTemplateContent(template => ViewContext.Writer.Write("<h1>Articulos</h1>"));
    });
    menuSettings.Items.Add(item =>
    {
        item.Name = "NewDetalles";
        item.Text = "New";
        item.Alignment = MenuItemAlignment.Left;
        item.AdaptivePriority = 2;
        item.Image.Url = "Content/Images/add.svg";

    });
    menuSettings.Items.Add(item =>
    {
        item.Name = "EditDetalles";
        item.Text = "Edit";
        item.Alignment = MenuItemAlignment.Left;
        item.AdaptivePriority = 2;
        item.Image.Url = "Content/Images/edit.svg";
    });
    menuSettings.Items.Add(item =>
    {
        item.Name = "DeleteDetalles";
        item.Text = "Delete";
        item.Alignment = MenuItemAlignment.Left;
        item.AdaptivePriority = 2;
        item.Image.Url = "Content/Images/delete.svg";
    });
    
    menuSettings.ClientSideEvents.ItemClick = "onPageToolbarItemClickDetalles";

}).GetHtml()



@Html.DevExpress().GridView(settings =>
{
    settings.Name = "gridViewd";
    settings.KeyFieldName = "Codigo";
    settings.CallbackRouteValues = new { Controller = "OrdenCompra", Action = "EditPartialForm" };
    settings.CustomActionRouteValues = new { Controller = "OrdenCompra", Action = "GridViewCustomActionPartial" };
    settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "OrdenCompra", Action = "GridViewAddNewPartial" };
    settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "OrdenCompra", Action = "GridViewUpdatePartial" };
    settings.EnablePagingGestures = AutoBoolean.False;
    settings.ControlStyle.CssClass = "grid-view";
    settings.Width = Unit.Percentage(100);
    settings.Styles.Cell.Wrap = DefaultBoolean.False;
    settings.Styles.PagerBottomPanel.CssClass = "pager";
    settings.Styles.FocusedRow.CssClass = "focused";
    settings.SettingsBehavior.AllowFocusedRow = true;
    settings.SettingsBehavior.AllowSelectByRowClick = true;
    settings.SettingsBehavior.AllowEllipsisInText = true;
    settings.SettingsBehavior.AllowDragDrop = false;
    settings.SettingsEditing.Mode = GridViewEditingMode.PopupEditForm;
    settings.SettingsEditing.EditFormColumnCount = 2;
    settings.Settings.VerticalScrollBarMode = ScrollBarMode.Hidden;
    settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Auto;
    settings.Settings.ShowHeaderFilterButton = true;
    settings.SettingsPager.PageSize = 15;
    settings.SettingsPager.EnableAdaptivity = true;
    settings.SettingsPager.PageSizeItemSettings.Visible = true;
    settings.SettingsExport.EnableClientSideExportAPI = true;
    settings.SettingsExport.ExportSelectedRowsOnly = true;
    settings.SettingsPopup.EditForm.SettingsAdaptivity.MaxWidth = 500;
    settings.SettingsPopup.EditForm.SettingsAdaptivity.Mode = PopupControlAdaptivityMode.Always;
    settings.SettingsPopup.EditForm.SettingsAdaptivity.VerticalAlign = PopupAdaptiveVerticalAlign.WindowCenter;
    settings.EditFormLayoutProperties.SettingsAdaptivity.AdaptivityMode = FormLayoutAdaptivityMode.SingleColumnWindowLimit;
    settings.EditFormLayoutProperties.SettingsAdaptivity.SwitchToSingleColumnAtWindowInnerWidth = 600;

    settings.EditFormLayoutProperties.UseDefaultPaddings = false;
    settings.EditFormLayoutProperties.SettingsItemCaptions.Location = LayoutItemCaptionLocation.Top;
    settings.EditFormLayoutProperties.Styles.LayoutGroup.Cell.Paddings.Padding = Unit.Pixel(3);
    settings.EditFormLayoutProperties.Styles.LayoutItem.Paddings.PaddingBottom = Unit.Pixel(8);
    settings.EditFormLayoutProperties.Items.Add(itemSettings =>
    {
        itemSettings.ColumnName = "oc_ccodpro";
    });

    settings.Columns.Add(column =>
    {
        column.FieldName = "oc_ccodpro";
        column.Caption = "código";
        column.Width = 100;
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "OC_CDESREF";
        column.Caption = "Descripción";

    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "OC_GLOSA";
        column.Caption = "glosa";
        column.Width = 400;
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "OC_CUNIDAD";
        column.Caption = "Uni";

    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "OC_NCANTID";
        column.Caption = "Cantidad";

    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "OC_NPREUNI";
        column.Caption = "Precio";


    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "OC_NDSCPOR";
        column.Caption = "%Des";


    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "OC_NTOTVEN";
        column.Caption = "total";
        // /column.ColumnType = MVCxGridViewColumnType.DateEdit;
        // column.PropertiesEdit.DisplayFormatString = "MM/dd/yyyy";
        // /((DateEditProperties)column.PropertiesEdit).EditFormat = EditFormat.Custom;
        // ((DateEditProperties)column.PropertiesEdit).EditFormatString = "MM/dd/yyyy";
    });
    settings.CellEditorInitialize = (s, e) =>
    {
        ASPxEdit editor = (ASPxEdit)e.Editor;
        editor.ValidationSettings.Display = Display.Dynamic;
    };

    settings.ClientSideEvents.Init = "onGridViewInitDetalles";
    settings.ClientSideEvents.SelectionChanged = "onGridViewSelectionChangedDetalles";
    settings.ClientSideEvents.BeginCallback = "onGridViewBeginCallback";
    settings.CustomJSProperties = (s, e) =>
    {
        if (ViewData["SuccessFlag"] != null)
            e.Properties["cpSuccessFlag"] = ViewData["SuccessFlag"];

    };
    settings.CommandButtonInitialize = (s, e) =>
    {
        if (e.ButtonType == ColumnCommandButtonType.Update || e.ButtonType == ColumnCommandButtonType.Cancel)
            e.Visible = false;
    };
}).Bind(Model).GetHtml()



