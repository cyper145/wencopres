
@using wencove.conexion.model.entity;
@using wencove.Code;
@using wencove.Model;
@model List<OrdenCompra>

@{

        var gridView = Html.DevExpress().GridView<OrdenCompra>(gridViewSettings =>
        {
            gridViewSettings.Name = "gridView";
            gridViewSettings.KeyFieldName = "OC_CNUMORD";

            gridViewSettings.CallbackRouteValues = new
            {
                Controller = "OrdenCompra",
                Action = "GridViewPartial" };
            gridViewSettings.CustomActionRouteValues = new { Controller = "OrdenCompra", Action = "GridViewCustomActionPartial" };
            gridViewSettings.SettingsEditing.AddNewRowRouteValues = new { Controller = "OrdenCompra", Action = "GridViewAddNewPartial" };
            gridViewSettings.SettingsEditing.UpdateRowRouteValues = new { Controller = "OrdenCompra", Action = "GridViewUpdatePartial" };

            gridViewSettings.EnablePagingGestures = AutoBoolean.False;

            gridViewSettings.ControlStyle.CssClass = "grid-view";
            gridViewSettings.Width = Unit.Percentage(100);
            gridViewSettings.Height = Unit.Percentage(100);

            gridViewSettings.Styles.Cell.Wrap = DefaultBoolean.False;
            gridViewSettings.Styles.PagerBottomPanel.CssClass = "pager";
            gridViewSettings.Styles.FocusedRow.CssClass = "focused";

            gridViewSettings.SettingsBehavior.AllowFocusedRow = true;
            //    gridViewSettings.SettingsBehavior.AllowSelectByRowClick = true;
            gridViewSettings.SettingsBehavior.AllowEllipsisInText = true;
            gridViewSettings.SettingsBehavior.AllowDragDrop = false;

            gridViewSettings.SettingsSearchPanel.CustomEditorName = "searchButtonEdit";
            gridViewSettings.SearchPanelEditorCreate = (sender, e) =>
            {
                e.EditorProperties = new DateEditProperties();
            };
            gridViewSettings.SettingsEditing.Mode = GridViewEditingMode.PopupEditForm;
            gridViewSettings.SettingsEditing.EditFormColumnCount = 2;

            gridViewSettings.SettingsSearchPanel.CustomEditorName = "searchButtonEdit";

            gridViewSettings.Settings.VerticalScrollBarMode = ScrollBarMode.Hidden;
            gridViewSettings.Settings.HorizontalScrollBarMode = ScrollBarMode.Auto;
            gridViewSettings.Settings.ShowHeaderFilterButton = true;

            gridViewSettings.SettingsPager.PageSize = 50;
            gridViewSettings.SettingsPager.EnableAdaptivity = true;
            gridViewSettings.SettingsPager.PageSizeItemSettings.Visible = true;

            gridViewSettings.SettingsExport.EnableClientSideExportAPI = true;
            gridViewSettings.SettingsExport.ExportSelectedRowsOnly = true;

            gridViewSettings.SettingsPopup.EditForm.SettingsAdaptivity.MaxWidth = 1200;
            gridViewSettings.SettingsPopup.EditForm.SettingsAdaptivity.Mode = PopupControlAdaptivityMode.Always;
            gridViewSettings.SettingsPopup.EditForm.SettingsAdaptivity.VerticalAlign = PopupAdaptiveVerticalAlign.WindowCenter;

            gridViewSettings.EditFormLayoutProperties.SettingsAdaptivity.AdaptivityMode = FormLayoutAdaptivityMode.SingleColumnWindowLimit;
            gridViewSettings.EditFormLayoutProperties.SettingsAdaptivity.SwitchToSingleColumnAtWindowInnerWidth = 1200;

            gridViewSettings.EditFormLayoutProperties.UseDefaultPaddings = false;

            gridViewSettings.EditFormLayoutProperties.SettingsItemCaptions.Location = LayoutItemCaptionLocation.Top;

            gridViewSettings.EditFormLayoutProperties.Styles.LayoutGroup.Cell.Paddings.Padding = Unit.Pixel(3);

            gridViewSettings.EditFormLayoutProperties.Styles.LayoutItem.Paddings.PaddingBottom = Unit.Pixel(8);



            gridViewSettings.SetEditFormTemplateContent(c=> {


                Html.DevExpress().FormLayout(layoutSetting =>
                {
                    layoutSetting.Name = "FormLayoutSetting";

                    layoutSetting.Width = Unit.Percentage(100);

                    layoutSetting.SettingsAdaptivity.AdaptivityMode = FormLayoutAdaptivityMode.SingleColumnWindowLimit;
                    layoutSetting.SettingsAdaptivity.SwitchToSingleColumnAtWindowInnerWidth = 700;
                    layoutSetting.UseDefaultPaddings = false;



                    var groupItem = layoutSetting.Items.AddGroupItem(groupSettings =>
                    {

                        groupSettings.ShowCaption = DefaultBoolean.False;
                        groupSettings.GroupBoxDecoration = GroupBoxDecoration.Default;
                        groupSettings.ColumnCount = 3;
                    });
                    groupItem.Items.Add( i =>
                    {

                        i.FieldName = "OC_CNUMORD";
                        i.Caption = "Número";

                        i.ColumnSpan = 2;
                        i.NestedExtension().TextBox(t =>
                        {
                            t.ReadOnly = true;
                            t.Width = Unit.Percentage(25);
                            t.Properties.ClientSideEvents.Init = "onData";
                        });
                    });
                    groupItem.Items.Add( i =>
                    {
                        i.FieldName = "EST_NOMBRE";
                        i.Caption = "Estado:";
                        i.ColumnSpan = 1;
                        i.NestedExtension().TextBox(t =>
                        {
                            t.Properties.ValidationSettings.Display = Display.Dynamic;
                            t.ShowModelErrors = true;
                            t.ReadOnly = true;
                        });
                    });

                    groupItem = layoutSetting.Items.AddGroupItem(groupSettings =>
                    {
                        groupSettings.Caption = "informacion principal";
                        groupSettings.ShowCaption = DefaultBoolean.True;
                        groupSettings.GroupBoxDecoration = GroupBoxDecoration.Default;
                        groupSettings.ColumnCount = 12;
                    });


                    groupItem.Items.Add(i =>
                    {
                        i.FieldName = "oc_ccodpro";
                        i.Name = "datax";

                        i.ShowCaption = DefaultBoolean.False;

                        i.ColumnSpan = 8;
                        i.SetNestedContent(() =>
                        {

                            Html.RenderAction("MultiSelectProveedor" , new { CurrentCategory = DataBinder.Eval(c.DataItem, "oc_ccodpro") });
                        });
                    });
                    groupItem.Items.Add( i =>

                    {
                        i.FieldName = "OC_CRAZSOC";
                        i.ShowCaption = DefaultBoolean.False;
                        i.ColumnSpan = 4;
                        i.Visible = false;

                        i.NestedExtension().TextBox(t =>
                        {
                            t.Properties.ValidationSettings.Display = Display.Dynamic;
                            t.ShowModelErrors = true;
                            t.ReadOnly = true;
                        });
                    });
                    groupItem.Items.Add( i =>

                    {
                        i.FieldName = "RUC";
                        i.Caption = "RUC:";
                        i.ColumnSpan = 4;
                        i.NestedExtension().TextBox(t =>
                        {
                            t.Properties.ValidationSettings.Display = Display.Dynamic;
                            t.ShowModelErrors = true;
                            t.ReadOnly = true;
                        });
                    });
                    groupItem.Items.Add(i =>

                    {
                        i.FieldName = "OC_SOLICITA";
                        i.ColumnSpan = 4;
                        i.Caption = " Solicitado por";
                        i.NestedExtension().ComboBox(t =>
                        {
                            t.Properties.ValidationSettings.Display = Display.Dynamic;
                            t.ShowModelErrors = true;

                            t.Properties.ValueType = typeof(string);
                            t.Properties.DataSource = GridViewHelper.GetSolitud();
                            t.Properties.ValueField = "TCLAVE";
                            t.Properties.TextField = "TDESCRI";
                        });

                    });

                    groupItem.Items.Add(i =>

                    {
                        i.FieldName = "OC_DFECDOC";
                        i.ColumnSpan = 2;
                        i.Caption = "Emisión";

                        i.NestedExtension().DateEdit(t =>
                        {
                            t.Properties.ValidationSettings.Display = Display.Dynamic;
                            t.ShowModelErrors = true;
                            t.Date = DateTime.Now;                      
                            t.Properties.ClientSideEvents.Init = "DateEmision";
                        });
                    });
                    groupItem.Items.Add(i =>

                    {
                        i.FieldName = "OC_DFECENT";
                        i.ColumnSpan = 2;
                        i.Caption = "Entrega";

                        i.NestedExtension().DateEdit(t =>
                        {


                            t.Date = new DateTime(1984, 06, 14);
                            t.Width = Unit.Percentage(100);

                        });
                    });


                    groupItem.Items.Add( i =>

                    {
                        i.FieldName = "OC_CDOCREF";
                        i.Caption="Doc Ref:";
                        i.ShowCaption = DefaultBoolean.False;
                        i.ColumnSpan = 2;
                        i.SetNestedContent(() =>
                        {

                            Html.RenderAction("MultiSelectDocRef", new { OC_CDOCREF = DataBinder.Eval(c.DataItem, "OC_CDOCREF") });
                        });
                    });
                    groupItem.Items.Add( i =>

                    {
                        i.FieldName = "OC_CNRODOCREF";
                        i.ColumnSpan = 2;
                     
                        i.ShowCaption = DefaultBoolean.False;
                        i.SetNestedContent(() =>
                        {

                            Html.RenderAction("MultiSelectNroRef", new {  NROREQUI= DataBinder.Eval(c.DataItem, "OC_CNRODOCREF") });
                    });
                });
                groupItem.Items.Add(i =>

                {
                    i.FieldName = "OC_CFORPAG";
                    i.ColumnSpan = 6;
                    i.Caption = "Forma de Pago";
                    i.NestedExtension().ComboBox(t =>
                    {
                        t.Properties.ValidationSettings.Display = Display.Dynamic;
                        t.ShowModelErrors = true;
                        t.SelectedIndex = 0;
                        t.Properties.ValueType = typeof(string);
                        t.Properties.DataSource = GridViewHelper.GetFormaPago();
                        t.Properties.ValueField = "COD_FP";
                        t.Properties.TextField = "DES_FP";
                    });
                });
                groupItem.Items.Add(i =>

                {
                    i.FieldName = "OC_CCODMON";
                    i.ColumnSpan = 2;
                    i.Caption = "Moneda";
                    i.NestedExtension().ComboBox(t =>
                    {
                        t.SelectedIndex = 0;

                        t.Properties.ValueType = typeof(string);
                        t.Properties.Items.Add("DOLARES AMERICANOS ", "ME");
                        t.Properties.Items.Add("NUEVOS SOLES ", "MN");

                        t.Properties.ValidationSettings.Display = Display.Dynamic;
                        t.ShowModelErrors = true;
                    });
                });
                groupItem.Items.Add(i =>

                {
                    i.FieldName = "COVMON_CODIGO";
                    i.ColumnSpan = 2;
                    i.Caption = "T. Cambio";
                    i.NestedExtension().ComboBox(t =>
                    {
                        t.Properties.ValidationSettings.Display = Display.Dynamic;
                        t.ShowModelErrors = true;
                        t.SelectedIndex = 0;
                        t.Properties.ValueType = typeof(string);
                        t.Properties.Items.Add("T/C COMPRA", "COM");
                        t.Properties.Items.Add("T/C ESPECIAL ", "ESP");
                        t.Properties.Items.Add("T/C  OTRA FECHA ", "FEC");
                        t.Properties.Items.Add("T/C VENTA ", "VTA");
                        t.Properties.ClientSideEvents.SelectedIndexChanged = "onchangeCambio";

                    });
                });
                groupItem.Items.Add(i =>

                {
                    i.FieldName = "OC_NTIPCAM";
                    i.ColumnSpan = 2;
                    i.Caption = "";
                    i.ShowCaption = DefaultBoolean.False;
                    i.NestedExtension().TextBox(t =>
                    {
                        t.Properties.ValidationSettings.Display = Display.Dynamic;
                        t.ShowModelErrors = true;
                        t.ReadOnly = true;
                    });
                });
                groupItem.Items.Add(i =>

                {
                    i.FieldName = "OC_CFACDIREC";
                    i.ColumnSpan = 8;
                    i.Caption = "Entregar en :";
                    i.NestedExtension().TextBox(t =>
                    {
                        t.Properties.ValidationSettings.Display = Display.Dynamic;
                        t.ShowModelErrors = true;
                    });
                });
                groupItem.Items.Add(i =>

                {
                    i.FieldName = "OC_CCOTIZA";
                    i.ColumnSpan = 4;
                    i.Caption = "Cotizacion ";
                    i.NestedExtension().TextBox(t =>
                    {
                        t.Properties.ValidationSettings.Display = Display.Dynamic;
                        t.ShowModelErrors = true;
                    });
                });
                groupItem.Items.Add(i =>

                {
                    i.FieldName = "oc_csolict";
                    i.Caption = "Doc Ref:";
                    i.ShowCaption = DefaultBoolean.False;
                    i.ColumnSpan = 5;
                    i.SetNestedContent(() =>
                    {
                        Html.RenderAction("MultiSelectResponsable", new { oc_csolict = DataBinder.Eval(c.DataItem, "oc_csolict") });
                    });
                });
                groupItem.Items.Add(i =>

                {
                    i.FieldName = "RESPONSABLE_CODIGO";
                    i.ColumnSpan = 1;
                    i.Caption = "Cotizacion ";
                    i.ShowCaption = DefaultBoolean.False;

                    i.NestedExtension().TextBox(t =>
                    {
                        t.Properties.ValidationSettings.Display = Display.Dynamic;
                        t.ShowModelErrors = true;
                        t.ReadOnly = true;
                    });
                });
                groupItem.Items.Add(i =>

                {
                    i.FieldName = "OC_TIPO";
                    i.ColumnSpan = 2;
                    i.Caption = "Tipó";


                    i.NestedExtension().ComboBox(t =>
                    {

                        t.Properties.ValidationSettings.Display = Display.Dynamic;
                        t.ShowModelErrors = true;
                        t.SelectedIndex = 0;
                        t.Properties.ValueType = typeof(int);
                        t.Properties.Items.Add("Compra",0);
                        t.Properties.Items.Add("Servicio Fabric.",1);
                    });
                });
                groupItem.Items.Add(i =>
                {
                    i.FieldName = "OC_PRINCIPAL";
                    i.ColumnSpan = 4;
                    i.Caption = "OC. Principal ";


                    i.NestedExtension().TextBox(t =>
                    {
                        t.Properties.ValidationSettings.Display = Display.Dynamic;
                        t.ShowModelErrors = true;

                    });
                });
                layoutSetting.Items.Add(itemSettings =>
                {
                    itemSettings.ShowCaption = DefaultBoolean.False;
                    itemSettings.SetNestedContent(() =>
                    {
                        Html.RenderAction("Toolbar", new { CurrentCategory = DataBinder.Eval(c.DataItem, "OC_CNUMORD") });
                    });
                });
                layoutSetting.Items.Add(itemSettings =>
                {
                    itemSettings.ShowCaption = DefaultBoolean.False;
                }).SetNestedContent(() =>
                {
                    ViewContext.Writer.Write("<div style='float:right'>");
                    Html.DevExpress().Button(
                        btnSettings =>
                        {
                            btnSettings.Name = "btnUpdate";
                            btnSettings.Text = "Grabar";
                            btnSettings.ClientSideEvents.Click = "function(s, e){ gridView.UpdateEdit(); }";

                            //I want to Hide Update Button when FirstName is "John"

                        }).Render();

                    Html.DevExpress().Button(
                        btnSettings =>
                        {
                            btnSettings.Name = "btnCancel";
                            btnSettings.Text = "Cancel";
                            btnSettings.Style[HtmlTextWriterStyle.MarginLeft] = "5px";
                            btnSettings.ClientSideEvents.Click = "function(s, e){ gridView.CancelEdit(); }";
                        }).Render();
                    ViewContext.Writer.Write("</div>");
                });


            }).Bind(ViewData["Object"] ?? c.DataItem).Render();

        });




        // gridViewSettings.CommandColumn.Visible = true;
        // gridViewSettings.CommandColumn.ShowSelectCheckbox = true;
        // gridViewSettings.CommandColumn.SelectAllCheckboxMode = GridViewSelectAllCheckBoxMode.AllPages;
        // gridViewSettings.CommandColumn.VisibleIndex = 0;
        //gridViewSettings.CommandColumn.Width = Unit.Pixel(52);


        gridViewSettings.Columns.Add(columnSettings =>
        {
            columnSettings.FieldName = "OC_CNUMORD";
            columnSettings.Caption = "Nro de Orden Compra";

            columnSettings.Width = System.Web.UI.WebControls.Unit.Pixel(200);
            columnSettings.CellStyle.HorizontalAlign = HorizontalAlign.Left;
            columnSettings.ExportCellStyle.HorizontalAlign = HorizontalAlign.Left;
            columnSettings.Settings.FilterMode = ColumnFilterMode.DisplayText;
            columnSettings.Settings.SortMode = DevExpress.XtraGrid.ColumnSortMode.DisplayText;
        });

        gridViewSettings.Columns.Add(columnSettings =>
        {
            columnSettings.FieldName = "oc_ccodpro";
            columnSettings.Caption = "Código Prov";

            columnSettings.Width = Unit.Pixel(150);



        });


        gridViewSettings.Columns.Add(columnSettings =>
        {
            columnSettings.FieldName = "OC_CRAZSOC";
            columnSettings.Caption = "Razón social";
            columnSettings.Width = Unit.Pixel(300);
        });
        gridViewSettings.Columns.Add(columnSettings =>
        {
            columnSettings.FieldName = "OC_DFECDOC";

            columnSettings.Visible = false;
        });


        gridViewSettings.Columns.Add(columnSettings =>
        {
            columnSettings.FieldName = "OC_DFECENT";
            columnSettings.Caption = "Emisión";
            columnSettings.Width = Unit.Pixel(200);
        });
        gridViewSettings.Columns.Add(columnSettings =>
        {
            columnSettings.FieldName = "OC_CCODMON";
            columnSettings.Caption = "Mo";
            columnSettings.Width = Unit.Pixel(70);
        });
        gridViewSettings.Columns.Add(columnSettings =>
        {
            columnSettings.FieldName = "OC_NIMPORT";
            columnSettings.Caption = "Importe";
            columnSettings.Width = Unit.Pixel(170);

        });
        gridViewSettings.Columns.Add(columnSettings =>
        {
            columnSettings.FieldName = "EST_NOMBRE";
            columnSettings.Caption = "Estado";

        });
        gridViewSettings.Columns.Add(columnSettings =>
        {
            columnSettings.FieldName = "OC_CDOCREF";
            columnSettings.Caption = "Doc Ref";
            columnSettings.Visible = false;

        });
        gridViewSettings.Columns.Add(columnSettings =>
        {
            columnSettings.FieldName = "oc_csolict";
            columnSettings.Caption = "Doc Ref";
            columnSettings.Visible = false;

        });
        gridViewSettings.Columns.Add(columnSettings =>
        {
            columnSettings.FieldName = "RESPONSABLE_CODIGO";
            columnSettings.Caption = "Doc Ref";
            columnSettings.Visible = false;

        });
        gridViewSettings.Columns.Add(columnSettings =>
        {
            columnSettings.FieldName = "OC_TIPO";

            columnSettings.Visible = false;

        });
        gridViewSettings.Columns.Add(columnSettings =>
        {
            columnSettings.FieldName = "OC_PRINCIPAL";

            columnSettings.Visible = false;

        });

        gridViewSettings.ClientSideEvents.SelectionChanged = "onGridViewSelectionChanged";
        gridViewSettings.ClientSideEvents.BeginCallback = "onGridViewBeginCallback";


        gridViewSettings.CellEditorInitialize = (s, e) =>
        {
            ((ASPxEdit)e.Editor).ValidationSettings.Display = Display.Dynamic;
        };
    });
    if (ViewBag.GeneralError != null)
    {
        gridView.SetEditErrorText(ViewBag.GeneralError);
    }
}

@gridView.Bind(Model).GetHtml()

